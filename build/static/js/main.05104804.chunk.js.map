{"version":3,"sources":["components/cart/cart.js","components/products/product.js","App.js","index.js"],"names":["Cart","dataArray","JSON","parse","localStorage","getItem","React","useState","state","setState","refresh","setRefresh","removeProduct","data","filteredArray","filter","obj","setItem","stringify","console","log","useEffect","className","name","map","title","onClick","src","image_url","alt","quantity","price","unitPrice","decrease","reduce","acc","curr","Products","modalIsOpen","setModalIsOpen","createApolloFetch","require","uri","fetch","query","then","res","catch","err","path","mdiCartOutline","size","isOpen","mdiArrowLeftCircle","value","products","idArray","formattedDataArray","push","id","includes","addToCart","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.05104804.chunk.js","sourcesContent":["import React from 'react';\nimport './cart.css';\n\nconst Cart = () => {\n    let dataArray = JSON.parse(localStorage.getItem('products')) || [];\n    const [state, setState] = React.useState(null);\n    const [refresh, setRefresh] = React.useState(0);\n    \n    React.useEffect(() => {\n        if (dataArray !== state)\n            setState(dataArray)\n    }, [dataArray]);\n\n    function increase(obj) {\n        console.log(\"plus\", obj)\n        obj.quantity += 1;\n        obj.price = obj.unitPrice * obj.quantity\n        setState([...state])\n        localStorage.setItem('products', JSON.stringify([...state]));\n        let refreshState = refresh + 1\n        setRefresh(refreshState)\n\n    }\n\n    function decrease(obj) {\n        console.log(\"minus\", obj)\n        obj.quantity -= 1;\n        if (obj.quantity < 1) return removeProduct(obj)\n        obj.price = obj.unitPrice * obj.quantity\n        setState([...state])\n        localStorage.setItem('products', JSON.stringify([...state]));\n\n        let refreshState = refresh + 1\n        setRefresh(refreshState)\n\n    }\n\n\n    function removeProduct(data) {\n       let filteredArray =  state.filter(obj => obj !== data)\n       setState([...filteredArray])\n       localStorage.setItem('products', JSON.stringify([...filteredArray]));\n       console.log('a', filteredArray)\n       let refreshState = refresh + 1\n       setRefresh(refreshState)\n    }\n    return (\n        <div className=\"cart-card\">\n            <div className=\"currency\">\n                <select name=\"currency\" className=\"select\">\n                    <option>USD</option>\n                </select>\n            </div>\n            {state ? state.map(data => <div className=\"cart-item\">\n                <div className=\"top-cart\">\n                    <p className=\"title\">{data.title}</p>\n                    <div className=\"close-form\" onClick={() => removeProduct(data)}> + </div>\n                </div>\n                <div className=\"image\">\n                    <img src={`${data.image_url}`} alt=\"\" className=\"cart-image\" />\n                </div>\n                <div className=\"bottom-cart\">\n                    <div className=\"quantity\">\n                        <p className=\"minus\" onClick={() => decrease(data)}> - </p>\n                        <p className=\"number\"> {data.quantity} </p>\n                        <p className=\"plus\" onClick={() => increase(data)}> + </p>\n                    </div>\n                    <p>${data.price}</p>\n                </div>\n            </div>) :\n                <div>No Item in cart</div>}\n            <div className=\"bottom\">\n            <div className=\"total\">\n                <hr className=\"hr\"/>\n                <div className=\"subtotal\">\n                    <p>Subtotal</p>\n                    <p>${state && state.reduce((acc, curr) => {\n                        return acc + curr.price;\n                    }, 0)}</p>\n                </div>\n            </div>\n            <div className=\"subscription\">\n                <button className=\"subscribe\">MAKE THIS A SUBSCRIPTION (SAVE 20%)</button>\n                <button className=\"checkout\">PROCEED TO CHECKOUT</button>\n            </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Cart;","import React, { useState, useEffect } from 'react';\nimport { mdiCartOutline, mdiArrowLeftCircle } from '@mdi/js';\nimport Modal from 'react-modal';\nimport Icon from '@mdi/react';\nimport Cart from '../cart/cart';\nimport './product.css';\n\nconst Products = () => {\n    const [state, setState] = useState(null);\n    const [modalIsOpen, setModalIsOpen ] = useState(false)\n    const [refresh, setRefresh] = useState(0);\n    const { createApolloFetch } = require('apollo-fetch');\n    useEffect(() => {\n        const fetch = createApolloFetch({\n            uri: 'https://pangaea-interviews.now.sh/api/graphql',\n        });\n        fetch({\n            query: ` query products {\n                    products {\n                        id\n                        image_url\n                        title\n                        price(currency: USD)\n                    }\n                }`\n        })\n            .then(res => {\n                console.log(res);\n                setState(res.data)\n            })\n            .catch(err => console.log('fetch error', err));\n    }, [])\n\n    // localStorage.clear()\n    function addToCart(data) {\n        const idArray = [];\n        let dataArray = JSON.parse(localStorage.getItem('products')) || [];\n        let formattedDataArray = dataArray.map(obj => {\n            idArray.push(obj.id)\n            if (obj.id === data.id) {\n                obj.quantity += 1;\n                obj.price = obj.unitPrice * obj.quantity\n                return obj\n            }\n            return obj\n        }, [])\n\n        if (!idArray.includes(data.id)) {\n            data.quantity = 1;\n            data.unitPrice = +data.price\n            formattedDataArray.push(data);\n        }\n\n        localStorage.setItem('products', JSON.stringify(formattedDataArray));\n        let refreshState = refresh + 1\n        setRefresh(refreshState)\n        setModalIsOpen(true)\n    }\n    return (\n        <div>\n            <nav className=\"nav\">\n                <h2>LUMIN</h2>\n                <ul>\n                    <li>Shop</li>\n                    <li>Learn</li>\n                </ul>\n                <div className=\"cart\">\n                    <p>Account</p>\n                    <Icon path={mdiCartOutline} title=\"Dashboard-icon\" size={1} className=\"cart-icon\" onClick={() => setModalIsOpen(true)}/>\n                </div>\n            </nav>\n            <hr />\n            <Modal className=\"bg-modal\" isOpen={modalIsOpen}>\n            <div className=\"cart-down\">\n            <div className=\"heading\">\n                <Icon path={mdiArrowLeftCircle} title=\"Dashboard-icon\" size={1} className=\"back-icon\" onClick={() => setModalIsOpen(false)}/>\n                <p>YOUR CART</p>\n            </div>\n                <Cart />\n            </div>\n            </Modal>\n            <section className=\"top\">\n                <div className=\"all-products\">\n                    <h2>All Products</h2>\n                    <p>A 360<sup>0</sup> look at lumin</p>\n                </div>\n                <div className=\"filter\">\n                    <select name=\"filter-by\">\n                        <option value=\"filter\">Filter by</option>\n                    </select>\n                </div>\n            </section>\n            <section className=\"products\">\n                {state && state.products.map(data => (<div className=\"product\">\n                    <img src={`${data.image_url}`} alt=\"product\" className=\"product-image\" />\n                    <p>{data.title}</p>\n                    <p>${data.price}</p>\n                    <button className=\"add\" onClick={() => addToCart(data)}>Add to cart</button>\n                </div>))}\n            </section>\n        </div>\n    )\n}\n\nexport default Products;","import './App.css';\nimport Products from './components/products/product';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <Products />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}